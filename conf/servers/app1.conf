
server {
    listen 1024;
    server_name _app1;
    
    
    access_log logs/access.log;

    location = /nginx_status {
        allow 127.0.0.1;
        allow 192.168.0.0/16;
        deny all;
        access_log off;
        stub_status;
    }

    location / {
        include common/proxy.conf;
        set $target_service_name '';
        set $origin_uri $uri;

        rewrite_by_lua_block {
            local app = require("app")
            app.http_rewrite()
        }
        access_by_lua_block {
            local app = require("app")
            app.http_access()
        }
        content_by_lua_block {
            local app = require("app")
            app.http_content()
        }
        header_filter_by_lua_block {
            local app = require("app")
            app.http_header_filter()
        }
        body_filter_by_lua_block {
            local app = require("app")
            app.http_body_filter()
        }
        log_by_lua_block {
            local app = require("app")
            app.http_log()
        }
        # proxy_pass http://backend_server;
    }

}

upstream backend_server {
    # just an invalid address as a place holder
    server 0.0.0.0;
    balancer_by_lua_block {
        local app = require("app")
        app.http_balancer()
    }
    # connection pool
    keepalive 100;
    keepalive_timeout 60s;
}


